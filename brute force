import time

def gcd(a, b):
    while b:
        a, b = b, a % b
    return a

def modinv(a, m):
    for x in range(1, m):
        if (a * x) % m == 1:
            return x
    return None

# Given values
p = 71
q = 73
n = p * q
e = 13  # Commonly used value for e
eulr = (p - 1) * (q - 1)

# Start measuring time
start_time = time.time()

# Brute force private key (d)
d = None
for candidate_d in range(2, eulr):
    if gcd(candidate_d, eulr) == 1:
        if (e * candidate_d) % eulr == 1:
            d = candidate_d
            break

# End measuring time
end_time = time.time()

# Output results
if d:
    print(f"Modulus (N): {n}")
    print(f"Prime factors: p={p}, q={q}")
    print(f"Public key: (n={n}, e={e})")
    print(f"Private key: (n={n}, d={d})")
else:
    print("Private key not found within the expected range.")

# Print runtime
print(f"Runtime: {(end_time - start_time) * 1000} milliseconds")
